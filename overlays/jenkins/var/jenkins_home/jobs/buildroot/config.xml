<?xml version='1.1' encoding='UTF-8'?>
<project>
  <actions/>
  <description></description>
  <keepDependencies>false</keepDependencies>
  <properties/>
  <scm class="hudson.plugins.git.GitSCM" plugin="git@4.4.1">
    <configVersion>2</configVersion>
    <userRemoteConfigs>
      <hudson.plugins.git.UserRemoteConfig>
        <url>http://git-server/buildroot.git</url>
      </hudson.plugins.git.UserRemoteConfig>
    </userRemoteConfigs>
    <branches>
      <hudson.plugins.git.BranchSpec>
        <name>*/master</name>
      </hudson.plugins.git.BranchSpec>
    </branches>
    <doGenerateSubmoduleConfigurations>false</doGenerateSubmoduleConfigurations>
    <submoduleCfg class="list"/>
    <extensions/>
  </scm>
  <canRoam>true</canRoam>
  <disabled>false</disabled>
  <blockBuildWhenDownstreamBuilding>false</blockBuildWhenDownstreamBuilding>
  <blockBuildWhenUpstreamBuilding>false</blockBuildWhenUpstreamBuilding>
  <triggers>
    <hudson.triggers.SCMTrigger>
      <spec>H/2 * * * *</spec>
      <ignorePostCommitHooks>false</ignorePostCommitHooks>
    </hudson.triggers.SCMTrigger>
  </triggers>
  <concurrentBuild>false</concurrentBuild>
  <builders>
    <hudson.tasks.Shell>
      <command>ARCH=arm64 make buildroot-config
make -C buildroot/arm64</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command># Publish the kernel to our file server (using FTP)
FILESERVER=fileserver

VERSION=$(git rev-parse --short HEAD)
cp buildroot/arm64/images/rootfs.ext2.gz rootfs-arm64-${VERSION}.ext2.gz
gzip -c buildroot/arm64/images/Image &gt; Image-arm64-${VERSION}.gz

ftp -n &lt;&lt; EOF
open ${FILESERVER}
user anonymous
cd buildroot
put rootfs-arm64-${VERSION}.ext2.gz
put Image-arm64-${VERSION}.gz
EOF

rm rootfs-arm64-${VERSION}.ext2.gz
rm Image-arm64-${VERSION}.gz</command>
    </hudson.tasks.Shell>
    <hudson.tasks.Shell>
      <command>#!/bin/bash

set -x

# Submit for testing
SQUAD_SERVER=squad
SQUAD_BACKEND=lava.server
SQUAD_TOKEN=2d703e793ea345efdbab52d95fe33ec715bcc2d4
SQUAD_GROUP=Linaro
SQUAD_PROJECT=buildroot
FILESERVER=fileserver
LAVA_JOB_TEMPLATES=(&quot;http://${FILESERVER}/job-templates/qemu-buildroot-busybox.yaml \
					 http://${FILESERVER}/job-templates/qemu-buildroot-nonreg.yaml&quot;)

# buildroot-micro-rootfs version
VERSION=$(git rev-parse --short HEAD)

# Substitute with build info
export KERNEL_URL=http://${FILESERVER}/buildroot/Image-arm64-${VERSION}.gz
export ROOTFS_URL=http://${FILESERVER}/buildroot/rootfs-arm64-${VERSION}.ext2.gz
export COMMIT_ID=${VERSION}
export BUILDROOT_DESC=$(git -C buildroot/tree/ describe)
export BUILDROOT_COMMIT=$(git -C buildroot/tree/ rev-parse HEAD)

for url in ${LAVA_JOB_TEMPLATES}; do
	# Download job template
	wget ${url} -O lava_job_template.yaml
    
    # Generate LAVA job
    envsubst &lt; lava_job_template.yaml &gt; lava_job.yaml
    LAVA_JOB_DEFINITION=$(cat lava_job.yaml)
    
    # Submit to SQUAD (and to LAVA via SQUAD)
    curl \
    	--header &quot;Auth-Token: ${SQUAD_TOKEN}&quot; \
    	--form backend=${SQUAD_BACKEND} \
    	--form definition=&quot;${LAVA_JOB_DEFINITION}&quot; \
    	http://${SQUAD_SERVER}/api/submitjob/${SQUAD_GROUP}/${SQUAD_PROJECT}/${VERSION}/jenkins
done</command>
    </hudson.tasks.Shell>
  </builders>
  <publishers/>
  <buildWrappers/>
</project>